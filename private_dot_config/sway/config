# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu_path | dmenu | xargs swaymsg exec --

# https://github.com/swaywm/sway/issues/1367
# set $menu gnome-terminal --title Menu --hide-menubar --command "bash -c 'compgen -c | sort -u | fzf | xargs -r swaymsg -t command exec'", for_window [app_id="gnome-terminal-server" title="Menu"] border pixel 0, for_window [app_id="gnome-terminal-server" title="Menu"] floating enable


include /etc/sway/config-vars.d/*

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top

    swaybar_command waybar

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done

    colors {
        statusline #ffffff
        background #323232
        inactive_workspace #32323200 #32323200 #5c5c5c
    }
}

include /etc/sway/config.d/*


# Screenshots
# currently having a custom grimshot under .local/bin

# does not copy to clipboard right now, but can do that _instead_ of saving by changing to this. have to figure out how to do both simultaneously later.
# bindsym Print exec /usr/bin/grim grim - | wl-clip
# bindsym Shift+Print exec /usr/bin/grim -g "$(slurp)" - | wl-clip
# --notify (msg) does NOT work! Can use notify-send though

# bindsym Print exec /usr/bin/grim
# bindsym Shift+Print exec /usr/bin/grim -g "$(slurp)"

set $grimshot ~/.local/bin/grimshot
bindsym Print exec $grimshot --notify savecopy anything
# bindsym Print exec grimshot --notify savecopy window
# bindsym Ctrl+Print exec $grimshot --notify copy screen
# bindsym Shift+Print exec grimshot --notify savecopy area
# bindsym Ctrl+Shift+Print exec $grimshot --notify copy area

# Mako
bindsym $mod+n exec makoctl dismiss
bindsym $mod+Shift+n exec makoctl dismiss -a

# Start programs
exec mako

# volume / brightness / media controls
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
# bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
# bindsym XF86MonBrightnessUp exec brightnessctl set +5%
bindsym XF86MonBrightnessDown exec light -U 1
bindsym XF86MonBrightnessUp exec light -A 1
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# Hide cursor after period of inactivity
seat seat0 hide_cursor 5000

# toggle waybar
bindsym $mod+x exec killall -SIGUSR1 waybar

# warpd hotkeys

bindsym Mod4+Mod1+x exec warpd --hint
bindsym Mod4+Mod1+c exec warpd --normal
bindsym Mod4+Mod1+g exec warpd --grid

input * xkb_options compose:caps

set $laptop eDP-1

# this does what we want now with monitors moving around
bindswitch --reload --locked lid:off output $laptop enable
bindswitch --reload --locked lid:on output $laptop disable
# we still need for if there's only one output, then sleep upon lid close
bindsym $mod+ctrl+l exec swaylock -f
bindsym $mod+ctrl+s exec swaylock -f & systemctl suspend


exec --no-startup-id fcitx5 -d

# move workspace to output
bindsym $mod+Control+Shift+$left  move workspace to output left
bindsym $mod+Control+Shift+$right move workspace to output right
bindsym $mod+Control+Shift+$up    move workspace to output up
bindsym $mod+Control+Shift+$down  move workspace to output down
# move workspace to output with arrow keys
bindsym $mod+Control+Shift+Left  move workspace to output left
bindsym $mod+Control+Shift+Right move workspace to output right
bindsym $mod+Control+Shift+Up    move workspace to output up
bindsym $mod+Control+Shift+Down  move workspace to output down


# # https://www.reddit.com/r/swaywm/comments/13n9sni/does_anyone_use_the_scratchpad_regularly/
# exec anki --class scratch_anki
# for_window [app_id="^scratch_anki"] move scratchpad
# # run terminal with custom app_id, smaller font, and lighter opacity
# exec alacritty --class popup_term \
#     --option colors.primary.background=#00080a \
#     --option window.opacity=0.75 \
#     --option font.size=9.0
# # resize/move it to the top ~20% of the screen and put it on scratchpad
# for_window [app_id="^popup_term"] floating enable, border none, resize set 1920 208, move absolute position 0 0, mark popup_term, move scratchpad, sticky enable
# # bring it up with $mod+v
# bindsym $mod+v [con_mark="^popup_term$"] scratchpad show

exec anki
for_window [class="Anki"] move to scratchpad
bindsym $mod+i [class="Anki"] scratchpad show, border none
exec obsidian
for_window [class="obsidian"] move to scratchpad
bindsym $mod+o [class="obsidian"] scratchpad show, border none
exec alacritty --app-id="scratch_term"
for_window [app_id="scratch_term"] move to scratchpad
bindsym $mod+u [app_id="scratch_term"] scratchpad show, border none

exec swaymsg 'workspace 7; exec firefox; exec thunderbird'
exec swaymsg 'workspace 8; exec goldendict; exec zotero'
exec swaymsg 'workspace 9; exec slack'
